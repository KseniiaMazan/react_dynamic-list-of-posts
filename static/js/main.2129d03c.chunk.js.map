{"version":3,"sources":["api/apiPosts.js","api/apiComments.js","api/apiUsers.js","Components/PropTypes/PropTypes.js","Components/User/User.js","Components/Comment/Comment.js","Components/CommentList/CommentList.js","Components/Post/Post.js","Components/PostList/PostList.js","Components/Header/Header.js","App.js","index.js"],"names":["getPostsFromServer","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","posts","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","apply","this","arguments","getCommentsFromServer","comments","getUsersFromServer","users","commentShape","PropTypes","string","shape","street","suite","city","zipcode","geo","lat","lng","postId","number","id","name","email","body","userShape","arrayOf","username","phone","website","adress","company","catchPhrase","bs","User","userId","title","user","address","react_default","createElement","className","concat","Comment","comment","CommentList","commentsList","map","Components_Comment_Comment","key","Post","text","commentList","Components_User_User","Components_CommentList_CommentList","filter","PostList","_ref2","Components_Post_Post","Header","length","addingUsers","postList","usersList","post","_objectSpread","find","App","state","isLoading","originalPosts","filterInputValue","loadAllTodos","_this","setState","Promise","all","then","slicedToArray","handleInputFilter","_ref3","target","value","toConsumableArray","_ref4","includes","handleResetPosts","prevState","_this$state","onClick","type","Components_Header_Header","onChange","Components_PostList_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2129d03c.chunk.js","sourcesContent":["const APIPOSTS_URl = 'https://jsonplaceholder.typicode.com/posts';\n\nconst getPostsFromServer = async() => {\n  const posts = await fetch(APIPOSTS_URl);\n\n  return posts.json();\n};\n\nexport default getPostsFromServer;\n","const APICOMMENTS_URl = 'https://jsonplaceholder.typicode.com/comments';\n\nconst getCommentsFromServer = async() => {\n  const comments = await fetch(APICOMMENTS_URl);\n\n  return comments.json();\n};\n\nexport default getCommentsFromServer;\n","const APIUSERS_URl = 'https://jsonplaceholder.typicode.com/users';\n\nconst getUsersFromServer = async() => {\n  const users = await fetch(APIUSERS_URl);\n\n  return users.json();\n};\n\nexport default getUsersFromServer;\n","import PropTypes from 'prop-types';\n\nexport const UserProps = {\n  name: PropTypes.string,\n  email: PropTypes.string,\n  adress: PropTypes.shape({\n    street: PropTypes.string,\n    suite: PropTypes.string,\n    city: PropTypes.string,\n    zipcode: PropTypes.string,\n    geo: PropTypes.shape({\n      lat: PropTypes.string,\n      lng: PropTypes.string,\n    }),\n  }),\n};\n\nexport const CommentProps = {\n  comment: PropTypes.string,\n  email: PropTypes.string,\n};\n\nconst commentShape = PropTypes.shape({\n  postId: PropTypes.number,\n  id: PropTypes.number,\n  name: PropTypes.string,\n  email: PropTypes.string,\n  body: PropTypes.string,\n});\n\nexport const CommentListProps = {\n  commentsList: PropTypes.arrayOf(\n    PropTypes.shape(commentShape),\n  ),\n};\n\nconst userShape = PropTypes.shape({\n  id: PropTypes.number,\n  name: PropTypes.string,\n  username: PropTypes.string,\n  email: PropTypes.string,\n  phone: PropTypes.string,\n  website: PropTypes.string,\n  adress: PropTypes.shape({\n    street: PropTypes.string,\n    suite: PropTypes.string,\n    city: PropTypes.string,\n    zipcode: PropTypes.string,\n    geo: PropTypes.shape({\n      lat: PropTypes.string,\n      lng: PropTypes.string,\n    }),\n  }),\n  company: PropTypes.shape({\n    name: PropTypes.string,\n    catchPhrase: PropTypes.string,\n    bs: PropTypes.string,\n  }),\n});\n\nexport const PostProps = {\n  title: PropTypes.string,\n  text: PropTypes.string,\n  user: PropTypes.shape(userShape),\n  id: PropTypes.number,\n  commentList: PropTypes.arrayOf(\n    PropTypes.shape(commentShape),\n  ),\n};\n\nexport const PostListProps = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.shape(userShape),\n  })),\n  commentList: PropTypes.arrayOf(\n    PropTypes.shape(commentShape),\n  ),\n};\n\nexport const HeaderProps = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    body: PropTypes.string,\n  })),\n  users: PropTypes.arrayOf(PropTypes.shape(userShape)),\n  comments: PropTypes.arrayOf(PropTypes.shape(commentShape)),\n};\n","import React from 'react';\nimport './User.css';\nimport { UserProps } from '../PropTypes/PropTypes';\n\nconst User = ({ name, email, address }) => (\n  <div>\n    <h2 className=\"user__name\">{name}</h2>\n    <p className=\"user__email\">{email}</p>\n    <p className=\"user__address\">\n      {`${address.street}, ${address.street}, ${address.city}`}\n    </p>\n  </div>\n);\n\nUser.propTypes = UserProps;\n\nexport default User;\n","import React from 'react';\nimport './Comment.css';\nimport { CommentProps } from '../PropTypes/PropTypes';\n\nconst Comment = ({ comment, email }) => (\n  <div className=\"comment\">\n    <p className=\"comment__email\">\n      {email}\n    </p>\n    <p className=\"comment__text\">\n      {comment}\n    </p>\n  </div>\n);\n\nComment.propTypes = CommentProps;\n\nexport default Comment;\n","import React from 'react';\nimport Comment from '../Comment/Comment';\nimport { CommentListProps } from '../PropTypes/PropTypes';\nimport './CommentList.css';\n\nconst CommentList = ({ commentsList }) => (\n  <div className=\"comment-list\">\n    {commentsList.map(comment => (\n      <Comment\n        comment={comment.body}\n        key={comment.id}\n        email={comment.email}\n      />\n    ))}\n  </div>\n);\n\nCommentList.propTypes = CommentListProps;\n\nexport default CommentList;\n","import React from 'react';\nimport User from '../User/User';\nimport CommentList from '../CommentList/CommentList';\nimport { PostProps } from '../PropTypes/PropTypes';\n\nimport './Post.css';\n\nconst Post = ({\n  title, text, user, id, commentList,\n}) => (\n  <div className=\"post\">\n    <User\n      name={user.name}\n      email={user.email}\n      address={user.address}\n    />\n    <h1 className=\"post__title\">\n      {title}\n    </h1>\n    <p className=\"post__text\">\n      {text}\n    </p>\n    <CommentList\n      commentsList={commentList.filter(comment => (\n        comment.postId === id\n      ))}\n    />\n  </div>\n);\n\nPost.propTypes = PostProps;\n\nexport default Post;\n","import React from 'react';\nimport Post from '../Post/Post';\nimport { PostListProps } from '../PropTypes/PropTypes';\n\nimport './PostList.css';\n\nconst PostList = ({ posts, commentList }) => (\n  <div className=\"post-list\">\n    {posts.map(({\n      title, body, user, id,\n    }) => (\n      <Post\n        title={title}\n        text={body}\n        user={user}\n        id={id}\n        key={id}\n        commentList={commentList}\n      />\n    ))}\n  </div>\n);\n\nPostList.propTypes = PostListProps;\n\nexport default PostList;\n","import React from 'react';\nimport './Header.css';\nimport { HeaderProps } from '../PropTypes/PropTypes';\n\nconst Header = ({ posts, users, comments }) => (\n  <div className=\"header\">\n    <h1 className=\"header__title\">Static list of posts</h1>\n    <p className=\"header__text\">\n      <span className=\"header__span\">posts: </span>\n      {posts.length}\n    </p>\n\n    <p className=\"header__text\">\n      <span className=\"header__span\">comments: </span>\n      {comments.length}\n    </p>\n\n    <p className=\"header__text\">\n      <span className=\"header__span\">Users: </span>\n      {users.length}\n    </p>\n  </div>\n);\n\nHeader.propTypes = HeaderProps;\n\nexport default Header;\n","import React from 'react';\n\nimport './App.css';\n\nimport getPostsFromServer from './api/apiPosts';\nimport getCommentsFromServer from './api/apiComments';\nimport getUsersFromServer from './api/apiUsers';\nimport PostList from './Components/PostList/PostList';\nimport Header from './Components/Header/Header';\n\nconst addingUsers = (postList, usersList) => postList.map(post => (\n  {\n    ...post,\n    user: usersList.find(user => (\n      user.id === post.userId\n    )),\n  }\n));\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    comments: [],\n    users: [],\n    isLoading: false,\n    originalPosts: [],\n    filterInputValue: '',\n  }\n\n  loadAllTodos = () => {\n    this.setState({ isLoading: true });\n\n    Promise\n      .all([\n        getPostsFromServer(), getUsersFromServer(), getCommentsFromServer(),\n      ])\n      .then(([posts, users, comments]) => {\n        this.setState({\n          posts: addingUsers(posts, users),\n          originalPosts: addingUsers(posts, users),\n          isLoading: false,\n          users,\n          comments,\n        });\n      });\n  }\n\n  handleInputFilter = ({ target }) => {\n    this.setState({\n      filterInputValue: target.value,\n      posts: [...this.state.originalPosts]\n        .filter(({ title }) => title.includes(this.state.filterInputValue)),\n    });\n  }\n\n  handleResetPosts = () => {\n    this.setState(prevState => ({\n      posts: [...prevState.originalPosts],\n    }));\n  }\n\n  render() {\n    const {\n      posts, users, isLoading, comments, filterInputValue, originalPosts,\n    } = this.state;\n\n    if (isLoading) {\n      return <p className=\"loading-text\">Posts are loading now...</p>;\n    }\n\n    if (originalPosts.length === 0) {\n      return (\n        <button\n          onClick={this.loadAllTodos}\n          type=\"button\"\n          className=\"data-button\"\n        >\n        Load all posts\n        </button>\n      );\n    }\n\n    return (\n      <main>\n        <Header\n          posts={posts}\n          users={users}\n          comments={comments}\n        />\n        <input\n          type=\"text\"\n          onChange={this.handleInputFilter}\n          value={filterInputValue}\n          className=\"filter-input\"\n        />\n        <PostList posts={posts} commentList={comments} />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}