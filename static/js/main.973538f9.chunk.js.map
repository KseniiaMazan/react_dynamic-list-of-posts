{"version":3,"sources":["Components/PropTypes/PropTypes.js","Components/User/User.js","Components/Comment/Comment.js","Components/CommentList/CommentList.js","Components/Post/Post.js","Components/PostList/PostList.js","Components/Header/Header.js","App.js","index.js"],"names":["commentShape","PropTypes","string","shape","street","suite","city","zipcode","geo","lat","lng","postId","number","id","name","email","body","userShape","arrayOf","username","phone","website","adress","company","catchPhrase","bs","User","userId","title","user","_ref","address","react_default","a","createElement","className","concat","Comment","comment","CommentList","commentsList","map","Components_Comment_Comment","key","Post","text","commentList","Components_User_User","Components_CommentList_CommentList","filter","PostList","posts","_ref2","Components_Post_Post","Header","users","comments","length","APIPOSTS_URl","APICOMMENTS_URl","APIUSERS_URl","getDataFromServer","Object","asyncToGenerator","regenerator_default","mark","_callee","url","data","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","_x","apply","this","arguments","addingUsers","postList","usersList","post","_objectSpread","find","App","state","isLoading","originalPosts","filterInputValue","loadAllTodos","_this","setState","Promise","all","then","_ref3","slicedToArray","handleInputFilter","_ref4","target","value","toConsumableArray","_ref5","includes","handleResetPosts","prevState","_this$state","onClick","type","Components_Header_Header","onChange","Components_PostList_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"saAsBMA,GAnBEC,IAAUC,OACTD,IAAUC,OACTD,IAAUE,MAAM,CACtBC,OAAQH,IAAUC,OAClBG,MAAOJ,IAAUC,OACjBI,KAAML,IAAUC,OAChBK,QAASN,IAAUC,OACnBM,IAAKP,IAAUE,MAAM,CACnBM,IAAKR,IAAUC,OACfQ,IAAKT,IAAUC,WAMVD,IAAUC,OACZD,IAAUC,OAGED,IAAUE,MAAM,CACnCQ,OAAQV,IAAUW,OAClBC,GAAIZ,IAAUW,OACdE,KAAMb,IAAUC,OAChBa,MAAOd,IAAUC,OACjBc,KAAMf,IAAUC,UASZe,GALUhB,IAAUiB,QACtBjB,IAAUE,MAAMH,IAIFC,IAAUE,MAAM,CAChCU,GAAIZ,IAAUW,OACdE,KAAMb,IAAUC,OAChBiB,SAAUlB,IAAUC,OACpBa,MAAOd,IAAUC,OACjBkB,MAAOnB,IAAUC,OACjBmB,QAASpB,IAAUC,OACnBoB,OAAQrB,IAAUE,MAAM,CACtBC,OAAQH,IAAUC,OAClBG,MAAOJ,IAAUC,OACjBI,KAAML,IAAUC,OAChBK,QAASN,IAAUC,OACnBM,IAAKP,IAAUE,MAAM,CACnBM,IAAKR,IAAUC,OACfQ,IAAKT,IAAUC,WAGnBqB,QAAStB,IAAUE,MAAM,CACvBW,KAAMb,IAAUC,OAChBsB,YAAavB,IAAUC,OACvBuB,GAAIxB,IAAUC,YCxCHwB,GD6CNzB,IAAUC,OACXD,IAAUC,OACVD,IAAUE,MAAMc,GAClBhB,IAAUW,OACDX,IAAUiB,QACrBjB,IAAUE,MAAMH,IAKXC,IAAUiB,QAAQjB,IAAUE,MAAM,CACvCwB,OAAQ1B,IAAUW,OAClBC,GAAIZ,IAAUW,OACdgB,MAAO3B,IAAUC,OACjBc,KAAMf,IAAUC,OAChB2B,KAAM5B,IAAUE,MAAMc,MAEXhB,IAAUiB,QACrBjB,IAAUE,MAAMH,IAKXC,IAAUiB,QAAQjB,IAAUE,MAAM,CACvCwB,OAAQ1B,IAAUW,OAClBC,GAAIZ,IAAUW,OACdgB,MAAO3B,IAAUC,OACjBc,KAAMf,IAAUC,UAEXD,IAAUiB,QAAQjB,IAAUE,MAAMc,IAC/BhB,IAAUiB,QAAQjB,IAAUE,MAAMH,ICvFjC,SAAA8B,GAAA,IAAGhB,EAAHgB,EAAGhB,KAAMC,EAATe,EAASf,MAAOgB,EAAhBD,EAAgBC,QAAhB,OACXC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcrB,GAC5BkB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAepB,GAC5BiB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,GAAAC,OACML,EAAQ3B,OADd,MAAAgC,OACyBL,EAAQ3B,OADjC,MAAAgC,OAC4CL,EAAQzB,UCQzC+B,SAbC,SAAAP,GAAA,IAAGQ,EAAHR,EAAGQ,QAASvB,EAAZe,EAAYf,MAAZ,OACdiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBACVpB,GAEHiB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBACVG,MCSQC,SAdK,SAAAT,GAAA,IAAGU,EAAHV,EAAGU,aAAH,OAClBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZK,EAAaC,IAAI,SAAAH,GAAO,OACvBN,EAAAC,EAAAC,cAACQ,EAAD,CACEJ,QAASA,EAAQtB,KACjB2B,IAAKL,EAAQzB,GACbE,MAAOuB,EAAQvB,aCqBR6B,SAzBF,SAAAd,GAAA,IACXF,EADWE,EACXF,MAAOiB,EADIf,EACJe,KAAMhB,EADFC,EACED,KAAMhB,EADRiB,EACQjB,GAAIiC,EADZhB,EACYgB,YADZ,OAGXd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACa,EAAD,CACEjC,KAAMe,EAAKf,KACXC,MAAOc,EAAKd,MACZgB,QAASF,EAAKE,UAEhBC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACXP,GAEHI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cACVU,GAEHb,EAAAC,EAAAC,cAACc,EAAD,CACER,aAAcM,EAAYG,OAAO,SAAAX,GAAO,OACtCA,EAAQ3B,SAAWE,SCCZqC,SAnBE,SAAApB,GAAA,IAAGqB,EAAHrB,EAAGqB,MAAOL,EAAVhB,EAAUgB,YAAV,OACfd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZgB,EAAMV,IAAI,SAAAW,GAAA,IACTxB,EADSwB,EACTxB,MAAOZ,EADEoC,EACFpC,KAAMa,EADJuB,EACIvB,KAAMhB,EADVuC,EACUvC,GADV,OAGTmB,EAAAC,EAAAC,cAACmB,EAAD,CACEzB,MAAOA,EACPiB,KAAM7B,EACNa,KAAMA,EACNhB,GAAIA,EACJ8B,IAAK9B,EACLiC,YAAaA,SCSNQ,SAtBA,SAAAxB,GAAA,IAAGqB,EAAHrB,EAAGqB,MAAOI,EAAVzB,EAAUyB,MAAOC,EAAjB1B,EAAiB0B,SAAjB,OACbxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,wBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,WACCgB,EAAMM,QAGTzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,cACCqB,EAASC,QAGZzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,WACCoB,EAAME,uOCdb,IAAMC,EAAe,6CACfC,EAAkB,gDAClBC,EAAe,6CAEfC,EAAiB,eAAA/B,EAAAgC,OAAAC,EAAA,EAAAD,CAAAE,EAAA/B,EAAAgC,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,EAAA/B,EAAAoC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACLC,MAAMN,GADD,cAClBC,EADkBE,EAAAI,KAAAJ,EAAAK,OAAA,SAGjBP,EAAKQ,QAHY,wBAAAN,EAAAO,SAAAX,MAAH,gBAAAY,GAAA,OAAAhD,EAAAiD,MAAAC,KAAAC,YAAA,GAMjBC,EAAc,SAACC,EAAUC,GAAX,OAAyBD,EAAS1C,IAAI,SAAA4C,GAAI,4VAAAC,CAAA,GAEvDD,EAFuD,CAG1DxD,KAAMuD,EAAUG,KAAK,SAAA1D,GAAI,OACvBA,EAAKhB,KAAOwE,EAAK1D,cAyFR6D,6MAnFbC,MAAQ,CACNtC,MAAO,GACPK,SAAU,GACVD,MAAO,GACPmC,WAAW,EACXC,cAAe,GACfC,iBAAkB,MAGpBC,aAAe,WACbC,EAAKC,SAAS,CAAEL,WAAW,IAE3BM,QACGC,IAAI,CACHpC,EAAkBH,GAClBG,EAAkBD,GAClBC,EAAkBF,KAEnBuC,KAAK,SAAA9C,GAA8B,IAAA+C,EAAArC,OAAAsC,EAAA,EAAAtC,CAAAV,EAAA,GAA5BD,EAA4BgD,EAAA,GAArB5C,EAAqB4C,EAAA,GAAd3C,EAAc2C,EAAA,GAClCL,EAAKC,SAAS,CACZ5C,MAAO+B,EAAY/B,EAAOI,GAC1BoC,cAAeT,EAAY/B,EAAOI,GAClCmC,WAAW,EACXnC,QACAC,kBAKR6C,kBAAoB,SAAAC,GAAgB,IAAbC,EAAaD,EAAbC,OACrBT,EAAKC,SAAS,CACZH,iBAAkBW,EAAOC,MACzBrD,MAAOW,OAAA2C,EAAA,EAAA3C,CAAIgC,EAAKL,MAAME,eACnB1C,OAAO,SAAAyD,GAAA,OAAAA,EAAG9E,MAAkB+E,SAASb,EAAKL,MAAMG,yBAIvDgB,iBAAmB,WACjBd,EAAKC,SAAS,SAAAc,GAAS,MAAK,CAC1B1D,MAAMW,OAAA2C,EAAA,EAAA3C,CAAK+C,EAAUlB,2FAIhB,IAAAmB,EAGH9B,KAAKS,MADPtC,EAFK2D,EAEL3D,MAAOI,EAFFuD,EAEEvD,MAAOmC,EAFToB,EAESpB,UAAWlC,EAFpBsD,EAEoBtD,SAAUoC,EAF9BkB,EAE8BlB,iBAAkBD,EAFhDmB,EAEgDnB,cAGvD,OAAID,EACK1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,4BAGoB,IAAzBwD,EAAclC,OAEdzB,EAAAC,EAAAC,cAAA,UACE6E,QAAS/B,KAAKa,aACdmB,KAAK,SACL7E,UAAU,eAHZ,kBAWFH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC+E,EAAD,CACE9D,MAAOA,EACPI,MAAOA,EACPC,SAAUA,IAEZxB,EAAAC,EAAAC,cAAA,SACE8E,KAAK,OACLE,SAAUlC,KAAKqB,kBACfG,MAAOZ,EACPzD,UAAU,iBAEZH,EAAAC,EAAAC,cAACiF,EAAD,CAAUhE,MAAOA,EAAOL,YAAaU,YA9E3B4D,IAAMC,WCpBxBC,IAASC,OAAOvF,EAAAC,EAAAC,cAACsF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.973538f9.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const UserProps = {\n  name: PropTypes.string,\n  email: PropTypes.string,\n  adress: PropTypes.shape({\n    street: PropTypes.string,\n    suite: PropTypes.string,\n    city: PropTypes.string,\n    zipcode: PropTypes.string,\n    geo: PropTypes.shape({\n      lat: PropTypes.string,\n      lng: PropTypes.string,\n    }),\n  }),\n};\n\nexport const CommentProps = {\n  comment: PropTypes.string,\n  email: PropTypes.string,\n};\n\nconst commentShape = PropTypes.shape({\n  postId: PropTypes.number,\n  id: PropTypes.number,\n  name: PropTypes.string,\n  email: PropTypes.string,\n  body: PropTypes.string,\n});\n\nexport const CommentListProps = {\n  commentsList: PropTypes.arrayOf(\n    PropTypes.shape(commentShape),\n  ),\n};\n\nconst userShape = PropTypes.shape({\n  id: PropTypes.number,\n  name: PropTypes.string,\n  username: PropTypes.string,\n  email: PropTypes.string,\n  phone: PropTypes.string,\n  website: PropTypes.string,\n  adress: PropTypes.shape({\n    street: PropTypes.string,\n    suite: PropTypes.string,\n    city: PropTypes.string,\n    zipcode: PropTypes.string,\n    geo: PropTypes.shape({\n      lat: PropTypes.string,\n      lng: PropTypes.string,\n    }),\n  }),\n  company: PropTypes.shape({\n    name: PropTypes.string,\n    catchPhrase: PropTypes.string,\n    bs: PropTypes.string,\n  }),\n});\n\nexport const PostProps = {\n  title: PropTypes.string,\n  text: PropTypes.string,\n  user: PropTypes.shape(userShape),\n  id: PropTypes.number,\n  commentList: PropTypes.arrayOf(\n    PropTypes.shape(commentShape),\n  ),\n};\n\nexport const PostListProps = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.shape(userShape),\n  })),\n  commentList: PropTypes.arrayOf(\n    PropTypes.shape(commentShape),\n  ),\n};\n\nexport const HeaderProps = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    body: PropTypes.string,\n  })),\n  users: PropTypes.arrayOf(PropTypes.shape(userShape)),\n  comments: PropTypes.arrayOf(PropTypes.shape(commentShape)),\n};\n","import React from 'react';\nimport './User.css';\nimport { UserProps } from '../PropTypes/PropTypes';\n\nconst User = ({ name, email, address }) => (\n  <div>\n    <h2 className=\"user__name\">{name}</h2>\n    <p className=\"user__email\">{email}</p>\n    <p className=\"user__address\">\n      {`${address.street}, ${address.street}, ${address.city}`}\n    </p>\n  </div>\n);\n\nUser.propTypes = UserProps;\n\nexport default User;\n","import React from 'react';\nimport './Comment.css';\nimport { CommentProps } from '../PropTypes/PropTypes';\n\nconst Comment = ({ comment, email }) => (\n  <div className=\"comment\">\n    <p className=\"comment__email\">\n      {email}\n    </p>\n    <p className=\"comment__text\">\n      {comment}\n    </p>\n  </div>\n);\n\nComment.propTypes = CommentProps;\n\nexport default Comment;\n","import React from 'react';\nimport Comment from '../Comment/Comment';\nimport { CommentListProps } from '../PropTypes/PropTypes';\nimport './CommentList.css';\n\nconst CommentList = ({ commentsList }) => (\n  <div className=\"comment-list\">\n    {commentsList.map(comment => (\n      <Comment\n        comment={comment.body}\n        key={comment.id}\n        email={comment.email}\n      />\n    ))}\n  </div>\n);\n\nCommentList.propTypes = CommentListProps;\n\nexport default CommentList;\n","import React from 'react';\nimport User from '../User/User';\nimport CommentList from '../CommentList/CommentList';\nimport { PostProps } from '../PropTypes/PropTypes';\n\nimport './Post.css';\n\nconst Post = ({\n  title, text, user, id, commentList,\n}) => (\n  <div className=\"post\">\n    <User\n      name={user.name}\n      email={user.email}\n      address={user.address}\n    />\n    <h1 className=\"post__title\">\n      {title}\n    </h1>\n    <p className=\"post__text\">\n      {text}\n    </p>\n    <CommentList\n      commentsList={commentList.filter(comment => (\n        comment.postId === id\n      ))}\n    />\n  </div>\n);\n\nPost.propTypes = PostProps;\n\nexport default Post;\n","import React from 'react';\nimport Post from '../Post/Post';\nimport { PostListProps } from '../PropTypes/PropTypes';\n\nimport './PostList.css';\n\nconst PostList = ({ posts, commentList }) => (\n  <div className=\"post-list\">\n    {posts.map(({\n      title, body, user, id,\n    }) => (\n      <Post\n        title={title}\n        text={body}\n        user={user}\n        id={id}\n        key={id}\n        commentList={commentList}\n      />\n    ))}\n  </div>\n);\n\nPostList.propTypes = PostListProps;\n\nexport default PostList;\n","import React from 'react';\nimport './Header.css';\nimport { HeaderProps } from '../PropTypes/PropTypes';\n\nconst Header = ({ posts, users, comments }) => (\n  <div className=\"header\">\n    <h1 className=\"header__title\">Static list of posts</h1>\n    <p className=\"header__text\">\n      <span className=\"header__span\">posts: </span>\n      {posts.length}\n    </p>\n\n    <p className=\"header__text\">\n      <span className=\"header__span\">comments: </span>\n      {comments.length}\n    </p>\n\n    <p className=\"header__text\">\n      <span className=\"header__span\">Users: </span>\n      {users.length}\n    </p>\n  </div>\n);\n\nHeader.propTypes = HeaderProps;\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport PostList from './Components/PostList/PostList';\nimport Header from './Components/Header/Header';\n\nconst APIPOSTS_URl = 'https://jsonplaceholder.typicode.com/posts';\nconst APICOMMENTS_URl = 'https://jsonplaceholder.typicode.com/comments';\nconst APIUSERS_URl = 'https://jsonplaceholder.typicode.com/users';\n\nconst getDataFromServer = async(url) => {\n  const data = await fetch(url);\n\n  return data.json();\n};\n\nconst addingUsers = (postList, usersList) => postList.map(post => (\n  {\n    ...post,\n    user: usersList.find(user => (\n      user.id === post.userId\n    )),\n  }\n));\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    comments: [],\n    users: [],\n    isLoading: false,\n    originalPosts: [],\n    filterInputValue: '',\n  }\n\n  loadAllTodos = () => {\n    this.setState({ isLoading: true });\n\n    Promise\n      .all([\n        getDataFromServer(APIPOSTS_URl),\n        getDataFromServer(APIUSERS_URl),\n        getDataFromServer(APICOMMENTS_URl),\n      ])\n      .then(([posts, users, comments]) => {\n        this.setState({\n          posts: addingUsers(posts, users),\n          originalPosts: addingUsers(posts, users),\n          isLoading: false,\n          users,\n          comments,\n        });\n      });\n  }\n\n  handleInputFilter = ({ target }) => {\n    this.setState({\n      filterInputValue: target.value,\n      posts: [...this.state.originalPosts]\n        .filter(({ title }) => title.includes(this.state.filterInputValue)),\n    });\n  }\n\n  handleResetPosts = () => {\n    this.setState(prevState => ({\n      posts: [...prevState.originalPosts],\n    }));\n  }\n\n  render() {\n    const {\n      posts, users, isLoading, comments, filterInputValue, originalPosts,\n    } = this.state;\n\n    if (isLoading) {\n      return <p className=\"loading-text\">Posts are loading now...</p>;\n    }\n\n    if (originalPosts.length === 0) {\n      return (\n        <button\n          onClick={this.loadAllTodos}\n          type=\"button\"\n          className=\"data-button\"\n        >\n        Load all posts\n        </button>\n      );\n    }\n\n    return (\n      <main>\n        <Header\n          posts={posts}\n          users={users}\n          comments={comments}\n        />\n        <input\n          type=\"text\"\n          onChange={this.handleInputFilter}\n          value={filterInputValue}\n          className=\"filter-input\"\n        />\n        <PostList posts={posts} commentList={comments} />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}